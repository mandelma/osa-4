{"version":3,"sources":["services/blogs.js","services/login.js","components/loginForm.js","components/blogiForm.js","components/BlogToggle.js","components/Blog.js","components/Notification.js","components/Togglable.js","App.js","index.js"],"names":["token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","request","console","log","setToken","newToken","removeToken","remove","delete","login","credentials","Login","props","onSubmit","handleLogin","type","value","username","onChange","usernameHandler","salasana","passwordHandler","Blogi","handleBlogi","title","titleHandler","author","authorHandler","url","urlHandler","likes","likesHandler","BlogToggle","React","forwardRef","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","onClick","openBlog","style","children","Blog","blog","addLike","removeBlog","showOrNot","userName","blogiUserName","paddingTop","paddingLeft","border","borderWidth","marginBottom","href","Notification","msg","msgType","className","Togglable","buttonLabel","App","message","setMessage","errMessage","setErrMessage","user","setUser","setUsername","setSalasana","blogs","setBlogs","setTitle","setauthor","setUrl","setLikes","createRef","useEffect","getBlogs","blogService","allBlogs","sortBlogs","notSorted","sort","start","end","loggedUserJSON","window","localStorage","getItem","JSON","parse","removeHandler","item","confirm","filter","event","preventDefault","loginService","password","setItem","stringify","setTimeout","like","newLike","find","b","updatedLike","blogi","updated","map","target","name","removeItem","blogObject","then","concat","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39a704cb.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst removeToken = () => {\r\n  token = null\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: {Authorization: token}\r\n  }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const config = {\r\n    headers: {Authorization: token}\r\n  }\r\n  try{\r\n    const request = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n    return request.data\r\n  }catch(exception){\r\n    console.log(exception)\r\n  }\r\n  \r\n  //const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  //return request.then(response => response.data)\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: {Authorization: token}\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default { \r\n    getAll,\r\n    create,\r\n    update,\r\n    setToken,\r\n    removeToken,\r\n    remove\r\n\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default {login}","import React from 'react'\r\n\r\nconst Login = (props) => {\r\n    return(\r\n        <div>\r\n            <form onSubmit = {props.handleLogin}>\r\n                <h2>Log in to application:</h2>\r\n                <label>Username:<br/>\r\n                    <input type = \"text\" \r\n                        value = {props.username} \r\n                        onChange = {props.usernameHandler}>\r\n                    </input><br/>\r\n                </label>\r\n                \r\n                <label>Password:<br/>\r\n                    <input type = \"password\"\r\n                        value = {props.salasana} \r\n                        onChange = {props.passwordHandler}>\r\n                    </input><br/>\r\n                </label><br></br>\r\n\r\n                <button type = \"submit\">Kirjaudu</button>\r\n            </form><br/>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nconst Blogi = (props) => {\r\n    return(\r\n        <div>\r\n            <form onSubmit = {props.handleBlogi}>\r\n                 <h2>Create new blog</h2>\r\n                 <label>Title:<br/>\r\n                     <input type = \"text\"\r\n                        value = {props.title}\r\n                        onChange = {props.titleHandler}>\r\n                     </input><br/>\r\n                 </label>\r\n                 <label>Author:<br/>\r\n                     <input type = \"text\"\r\n                        value = {props.author}\r\n                        onChange = {props.authorHandler}>\r\n                     </input>\r\n                 </label><br/>\r\n                 <label>Url:<br/>\r\n                     <input type = \"text\"\r\n                        value = {props.url}\r\n                        onChange = {props.urlHandler}>\r\n                     </input>\r\n                 </label><br/>\r\n                 <label>Likes:<br/>\r\n                    <input type = \"text\"\r\n                        value = {props.likes}\r\n                        onChange = {props.likesHandler}>                        \r\n                    </input>\r\n                 </label><br/><br/>\r\n                 <button type = \"submit\">Create blog</button>\r\n             </form>\r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blogi","import React, {useState, useImperativeHandle} from 'react'\r\n\r\nconst BlogToggle = React.forwardRef((props, ref) => {\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const hideWhenVisible = {display: visible ? 'none' : ''}\r\n    const showWhenVisible = {display: visible ? '' : 'none'}\r\n\r\n    const toggleVisibility = () => {\r\n        setVisible(!visible)\r\n    }\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return(\r\n            toggleVisibility\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <div onClick = {toggleVisibility}> {props.openBlog}\r\n                <div style = {hideWhenVisible}></div>\r\n            </div>\r\n            <div style = {showWhenVisible}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )    \r\n})\r\n\r\nexport default BlogToggle","import React from 'react'\r\nimport BlogToggle from './BlogToggle'\r\n\r\nconst Blog = ({blog, addLike, removeBlog, userName, blogiUserName}) => {\r\n    const blogStyle = {\r\n        paddingTop: 10,\r\n        paddingLeft: 2,\r\n        border: 'solid',\r\n        borderWidth: 1,\r\n        marginBottom: 5\r\n\r\n    }\r\n\r\n    const showOrNot = {display: userName === blogiUserName ? '' : 'none'}\r\n\r\n    return(\r\n        <div style = {blogStyle}>\r\n            <BlogToggle openBlog = {blog.title}>\r\n                <div>\r\n                    <a href = {blog.url}>{blog.url}</a><br/>\r\n                    {blog.likes} likes&nbsp;&nbsp;\r\n                    <button onClick = {addLike}>Like</button><br/>\r\n                    added by {blog.author}<br/><br/>\r\n                    <div style = {showOrNot}>\r\n                        <button onClick = {removeBlog}>Remove</button>\r\n                    </div>\r\n                </div>  \r\n            </BlogToggle>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\n\r\nconst Notification = ({msg, msgType}) => {\r\n    if(msg === null){\r\n      return null\r\n    }\r\n    return <div className = {msgType}>\r\n      {msg}\r\n    </div>\r\n  }\r\n\r\nexport default Notification","import React, {useState} from 'react'\r\n\r\nconst Togglable = (props) => {\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const hideWhenVisible = {display: visible ? 'none' : ''}\r\n    const showWhenVisible = {display: visible ? '' : 'none'}\r\n\r\n    const toggleVisibility = () => {\r\n        setVisible(!visible)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div style = {hideWhenVisible}>\r\n                <button onClick = {toggleVisibility}>{props.buttonLabel}</button>\r\n            </div>\r\n            <div style = {showWhenVisible}>\r\n                {props.children}\r\n                <button onClick = {toggleVisibility}>Cansel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Togglable","import React, {useState, useEffect} from 'react';\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport './index.css'\nimport Login from './components/loginForm'\nimport Blogi from './components/blogiForm'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\n\nconst App = () => {\n\n  const [message, setMessage] = useState(null)\n  const [errMessage, setErrMessage] = useState(null)\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState(\"\")\n  const [salasana, setSalasana] = useState(\"\")\n  const [blogVisible, setBlogVisible] = useState(false)\n  const [blogs, setBlogs] = useState([])\n  const [title, setTitle] = useState('')\n  const [author, setauthor] = useState('')\n  const [url, setUrl] = useState('')\n  const [likes, setLikes] = useState('')\n\n  const blogFormRef = React.createRef()\n\n  useEffect(() => {\n    getBlogs()\n  }, [])\n\n  const getBlogs = (async () => {\n    const allBlogs = await blogService.getAll()\n    setBlogs(sortBlogs(allBlogs))\n  })\n\n  const sortBlogs = (notSorted) => {\n    return notSorted.sort((start, end) => {\n      return start.likes - end.likes\n    })\n  }\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if(loggedUserJSON){\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const readBlogs = () => blogs.map(blog => \n    <Blog \n      key = {blog.title}\n      blog = {blog}\n      userName = {user.username}\n      blogiUserName = {blog.user.username}\n      addLike = {() => addLike(blog)}\n    \n      removeBlog = {() => removeHandler(blog)}\n    />\n  )\n  \n  const removeHandler = async (item) => {\n    try{\n      if(window.confirm(`remove blog ${item.title} by ${item.author}`)){\n        await blogService.remove(item.id)\n        setBlogs(blogs.filter(blog => blog.id !== item.id))\n      }\n    }catch(exception){\n      console.log(\"Error:\", exception)\n    }\n\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try{\n      const user = await loginService.login({\n        username: username,\n        password: salasana\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setSalasana('')\n    }catch(exception){\n      setUsername('')\n      setSalasana('')\n      setErrMessage('Wrong username or password!')\n      setTimeout(() => {\n        setErrMessage(null)\n      }, 5000)\n    } \n  }\n\n const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: title,\n      author: author,\n      url: url,\n      likes: likes\n    }\n\n    blogService\n      .create(blogObject)\n      .then(response => {\n        setBlogs(blogs.concat(response))\n        \n        setTitle('')\n        setauthor('')\n        setUrl('')\n        setLikes('')\n\n        setMessage(`A new blog ${response.title} by ${response.author} added!`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })  \n  }\n\n  const logOut = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    blogService.removeToken()\n    setUser(null)\n  }\n\n  const addLike = async (like) => {\n    const newLike = like.likes + 1\n    const blog = blogs.find(b => b.id === like.id)\n    const updatedLike = {\n      ...blog, likes: newLike\n    }\n\n    const blogi = blogs.find(blog => blog.id === like.id)\n\n    try{\n      const updated = await blogService.update(blog.id, updatedLike)  \n      blogi.likes = updated.likes\n      setBlogs(blogs.map(blog => blog.id === blogi.id ? blogi : blog))\n    }catch(exception){\n      console.log(exception)\n    }\n  }\n\n  const usernameHandler = (event) => {\n    setUsername(event.target.value)\n  }\n  const passwordHandler = (event) => {\n    setSalasana(event.target.value)\n  }\n\n  const titleHandler = (event) => {\n    setTitle(event.target.value)\n  }\n\n  const authorHandler = (event) => {\n    setauthor(event.target.value)\n  }\n\n  const urlHandler = (event) => {\n    setUrl(event.target.value)\n  }\n\n  const likesHandler = (event) => {\n    setLikes(event.target.value)\n  }\n\n  return (\n    <div>\n      <Notification\n        msg = {message !== null ? message : errMessage}\n        msgType = {message !== null ? 'message' : 'error'}\n      />\n      {\n        user === null \n        ?\n        <Login\n          handleLogin = {handleLogin} \n          username = {username}\n          usernameHandler = {usernameHandler}\n          salasana = {salasana}\n          passwordHandler = {passwordHandler}\n          username = {username}\n          salasana = {salasana}\n        />\n        :\n        <div>\n          <h1>Blogs</h1>\n          <p>\n            {user.name} logged in&nbsp;&nbsp;\n            <button onClick = {logOut}>Log out</button>\n          </p>\n          <Togglable buttonLabel = 'New blog'>\n            <Blogi              \n              handleBlogi = {addBlog}\n              title = {title}\n              author = {author}\n              url = {url}\n              likes = {likes}\n              titleHandler = {titleHandler}\n              authorHandler = {authorHandler}\n              urlHandler = {urlHandler}\n              likesHandler = {likesHandler}\n            />\n          </Togglable>\n          {readBlogs()}\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}